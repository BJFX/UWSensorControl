<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:metroChart="clr-namespace:De.TorstenMandelkow.MetroChart;assembly=De.TorstenMandelkow.MetroChart"
                    xmlns:adp="clr-namespace:USBLDC.AttachedProperty"
                    mc:Ignorable="d">
    <FontFamily x:Key="SegoeUISymbol">../Font/seguisym.ttf#Segoe UI Symbol</FontFamily>
    <!--ButtonStyle-->
	<Style x:Key="GlassButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate  TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Timeline1">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="Timeline2">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="GrowUp">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="OutBorder">
								<EasingDoubleKeyFrame KeyTime="0:00:00.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:00:00.5" Value="1.3">
									<EasingDoubleKeyFrame.EasingFunction>
										<BounceEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="border">
								<EasingDoubleKeyFrame KeyTime="0:00:00.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:00:00.5" Value="1.05"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0:00:00.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:00:00.5" Value="1.1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="glow">
								<EasingDoubleKeyFrame KeyTime="0:00:00.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:00:00.5" Value="1.1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="contentPresenter">
								<EasingDoubleKeyFrame KeyTime="0:00:00.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:00:00.5" Value="1.1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="shine">
								<EasingDoubleKeyFrame KeyTime="0:00:00.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:00:00.5" Value="0.9"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="OutBorder">
								<EasingDoubleKeyFrame KeyTime="0:00:00.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:00:00.5" Value="1.3">
									<EasingDoubleKeyFrame.EasingFunction>
										<BounceEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="border">
								<EasingDoubleKeyFrame KeyTime="0:00:00.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:00:00.5" Value="1.1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
								<EasingDoubleKeyFrame KeyTime="0:00:00.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:00:00.5" Value="1.1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="glow">
								<EasingDoubleKeyFrame KeyTime="0:00:00.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:00:00.5" Value="1.1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="contentPresenter">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="shine">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.9"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>

					</ControlTemplate.Resources>
					<Border x:Name ="OutBorder" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
						<Border.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Border.RenderTransform>
						<Border x:Name="border" Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.RenderTransform>
							<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
								<Grid.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Grid.RenderTransform>
								<Grid.RowDefinitions>
									<RowDefinition Height="0.507*"/>
									<RowDefinition Height="0.493*"/>
								</Grid.RowDefinitions>
								<Border Opacity="0" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" Grid.RowSpan="2" CornerRadius="4,4,4,4" RenderTransformOrigin="0.5,0.5">
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</Border.RenderTransform>
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
													<SkewTransform AngleX="0" AngleY="0"/>
													<RotateTransform Angle="0"/>
													<TranslateTransform X="-0.368" Y="-0.152"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#B28DBDFF" Offset="0"/>
											<GradientStop Color="#008DBDFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<ContentPresenter x:Name="contentPresenter"   Grid.RowSpan="1" RenderTransformOrigin="0.5,0.5"  Height="20" Width="Auto" FlowDirection="LeftToRight" IsHitTestVisible="False" Margin="18,20.499,0,-25" Grid.Row="1">
									<ContentPresenter.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</ContentPresenter.RenderTransform>
								</ContentPresenter>
								<Border HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0" RenderTransformOrigin="0.5,0.5">
									<Border.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</Border.RenderTransform>
									<Border.Background>
										<LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
											<GradientStop Color="#99FFFFFF" Offset="0"/>
											<GradientStop Color="#33FFFFFF" Offset="1"/>
										</LinearGradientBrush>
									</Border.Background>
								</Border>
							</Grid>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonDown">
							<BeginStoryboard x:Name="GrowUp_BeginStoryboard" Storyboard="{StaticResource GrowUp}"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="FrameworkElement.Loaded">
							<BeginStoryboard x:Name="GrowUp_BeginStoryboard2" Storyboard="{StaticResource GrowUp}"/>
						</EventTrigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="shine" Value="0.4"/>
							<Setter Property="Background" TargetName="border" Value="#CC000000"/>
							<Setter Property="Visibility" TargetName="glow" Value="Hidden"/>
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="Timeline1_BeginStoryboard" Storyboard="{StaticResource Timeline1}"/>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
							</Trigger.ExitActions>
							<Setter Property="Cursor" Value="Hand"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<TransformGroup x:Key="MainButtonRenderSize">
		<ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
		<SkewTransform AngleX="0" AngleY="0"/>
		<RotateTransform Angle="0"/>
		<TranslateTransform X="0" Y="0"/>
	</TransformGroup>
	
	<Style x:Key="HotSpotButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="EnterHotspot" AutoReverse="True">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="_base3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.05000000" Value="0.9"/>
								<SplineDoubleKeyFrame KeySpline="0,1,1,0" KeyTime="00:00:01.8000000" Value="1.2"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_base3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.05000000" Value="0.9"/>
								<SplineDoubleKeyFrame KeySpline="0,1,1,0" KeyTime="00:00:01.8000000" Value="1.2"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="_base3" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.7"/>
								<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="00:00:01.8000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="_base4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0.2"/>
								<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="00:00:01.8000000" Value="0.8"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="_base4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0.2"/>
								<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="00:00:01.8000000" Value="0.8"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="_base4" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
								<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="00:00:01.8000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="_base">
								<EasingColorKeyFrame KeyTime="0" Value="#8EFFFFFF"/>
							</ColorAnimationUsingKeyFrames>
							<DoubleAnimationUsingPath Duration="0:0:2" Source="X" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="_base2">
								<DoubleAnimationUsingPath.PathGeometry>
									<PathGeometry Figures="M99,0 C99,54.67619 54.67619,99 0,99 C-54.67619,99 -99,54.67619 -99,0 C-99,-54.67619 -54.67619,-99 0,-99 C54.67619,-99 99,-54.67619 99,0 z"/>
								</DoubleAnimationUsingPath.PathGeometry>
							</DoubleAnimationUsingPath>
							<DoubleAnimationUsingPath Duration="0:0:2" Source="Y" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="_base2">
								<DoubleAnimationUsingPath.PathGeometry>
									<PathGeometry Figures="M99,0 C99,54.67619 54.67619,99 0,99 C-54.67619,99 -99,54.67619 -99,0 C-99,-54.67619 -54.67619,-99 0,-99 C54.67619,-99 99,-54.67619 99,0 z"/>
								</DoubleAnimationUsingPath.PathGeometry>
							</DoubleAnimationUsingPath>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="_base2">
								<EasingDoubleKeyFrame KeyTime="0:0:2" Value="1">
									<EasingDoubleKeyFrame.EasingFunction>
										<ElasticEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="_base2">
								<EasingColorKeyFrame KeyTime="0:0:2" Value="WhiteSmoke"/>
							</ColorAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="centerShadow2">
								<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.495"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="centerShadow1">
								<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.33"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="centerBase">
								<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.685"/>
							</DoubleAnimationUsingKeyFrames>
							<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="_base3">
								<EasingColorKeyFrame KeyTime="0:0:0.2" Value="Black"/>
								<EasingColorKeyFrame KeyTime="0:0:0.5" Value="#FF616372"/>
								<EasingColorKeyFrame KeyTime="0:0:1.8" Value="Black"/>
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid Width="300" Height="300"  >
						<Grid  Background = "{TemplateBinding Background}" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" Width="Auto" Height="Auto" IsHitTestVisible="False">
							<Grid Opacity="1" Margin="0" x:Name="grid1" IsHitTestVisible="False" >
								<Grid x:Name="overAnimationGrid" Visibility="Visible" Focusable="False" Opacity="1" Width="300" Height="300" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Margin="0">
									<Grid.RenderTransform>
										<TransformGroup>
											<ScaleTransform ScaleX="1" ScaleY="1"/>
											<SkewTransform AngleX="0" AngleY="0"/>
											<RotateTransform Angle="0"/>
											<TranslateTransform X="0" Y="0"/>
										</TransformGroup>
									</Grid.RenderTransform>
									<Ellipse x:Name="_base4" StrokeThickness="30" RenderTransformOrigin="0.5,0.5" Opacity="0.42" Margin="74.5,74.5,74.5,74.5" Fill="{x:Null}" Stroke="#FF0A4F57">
										<Ellipse.RenderTransform>
											<TransformGroup>
												<ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
												<SkewTransform AngleX="0" AngleY="0"/>
												<RotateTransform Angle="0"/>
												<TranslateTransform X="0" Y="0"/>
											</TransformGroup>
										</Ellipse.RenderTransform>
									</Ellipse>
									<Ellipse x:Name="_base3" StrokeThickness="10" RenderTransformOrigin="0.5,0.5" Opacity="0.42" Margin="74.5" Fill="Black" Stroke="#FF0A4F57">
										<Ellipse.RenderTransform>
											<TransformGroup>
												<ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
												<SkewTransform AngleX="0" AngleY="0"/>
												<RotateTransform Angle="0"/>
												<TranslateTransform X="0" Y="0"/>
											</TransformGroup>
										</Ellipse.RenderTransform>
									</Ellipse>
									<Ellipse x:Name="_base2" StrokeThickness="10" RenderTransformOrigin="0.5,0.5" Opacity="0.42" HorizontalAlignment="Stretch" Margin="74.5,74.5,74.5,74.5" VerticalAlignment="Stretch" Stroke="#FF0A4F57" Fill="Black">
										<Ellipse.RenderTransform>
											<TransformGroup>
												<ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
												<SkewTransform AngleX="0" AngleY="0"/>
												<RotateTransform Angle="0"/>
												<TranslateTransform X="0" Y="0"/>
											</TransformGroup>
										</Ellipse.RenderTransform>
									</Ellipse>
									<Ellipse x:Name="_base" Width="201" Height="201" HorizontalAlignment="Center" Margin="49.5" VerticalAlignment="Center" StrokeThickness="3" RenderTransformOrigin="0.5,0.5">
										<Ellipse.Fill>
											<RadialGradientBrush>
												<GradientStop Color="#00215A5E" Offset="1"/>
												<GradientStop Color="#8E1F5558" Offset="0"/>
											</RadialGradientBrush>
										</Ellipse.Fill>
										<Ellipse.Stroke>
											<LinearGradientBrush EndPoint="0.002,0.515" StartPoint="0.998,0.5">
												<GradientStop Color="#FF0A4F57" Offset="0"/>
												<GradientStop Color="#000A4F57" Offset="0.986"/>
											</LinearGradientBrush>
										</Ellipse.Stroke>
										<Ellipse.RenderTransform>
											<TransformGroup>
												<ScaleTransform ScaleX="1" ScaleY="1"/>
												<SkewTransform AngleX="0" AngleY="0"/>
												<RotateTransform Angle="0"/>
												<TranslateTransform X="0" Y="0"/>
											</TransformGroup>
										</Ellipse.RenderTransform>
									</Ellipse>
									<Ellipse Stroke="{x:Null}" x:Name="centerShadow3" Margin="140" Fill="#33000000" RenderTransformOrigin="0.5,0.5">
										<Ellipse.RenderTransform>
											<TransformGroup>
												<ScaleTransform ScaleY="1" ScaleX="1"/>
												<SkewTransform/>
												<RotateTransform/>
												<TranslateTransform/>
											</TransformGroup>
										</Ellipse.RenderTransform>
									</Ellipse>
									<Ellipse Stroke="{x:Null}" x:Name="centerShadow2" Margin="122.109,123.109,122.972,123.972" Fill="#33000000" RenderTransformOrigin="0.5,0.5">
										<Ellipse.RenderTransform>
											<TransformGroup>
												<ScaleTransform ScaleY="-1" ScaleX="-1"/>
												<SkewTransform/>
												<RotateTransform/>
												<TranslateTransform/>
											</TransformGroup>
										</Ellipse.RenderTransform>
									</Ellipse>
									<Ellipse Stroke="{x:Null}" x:Name="centerShadow1" Margin="104.109,106.109,102.891,106.891" Fill="{TemplateBinding OpacityMask}" RenderTransformOrigin="0.5,0.5">
										<Ellipse.RenderTransform>
											<TransformGroup>
												<ScaleTransform ScaleY="1" ScaleX="1"/>
												<SkewTransform/>
												<RotateTransform/>
												<TranslateTransform/>
											</TransformGroup>
										</Ellipse.RenderTransform>
									</Ellipse>
									<Path Stretch="Fill" Stroke="{x:Null}" Margin="128.502,158.6,134.088,117.194" x:Name="centerReflex" Width="Auto" Height="Auto" RenderTransformOrigin="0.509,-0.063">
										<Path.Fill>
											<LinearGradientBrush EndPoint="0.622,0.834" StartPoint="0.462,-0.148">
												<GradientStop Color="#BCFFFFFF" Offset="0"/>
												<GradientStop Color="#00FFFFFF" Offset="0.986"/>
											</LinearGradientBrush>
										</Path.Fill>
										<Path.Data>
											<PathGeometry>
												<PathFigure IsClosed="True" StartPoint="30.3210918169212,16.8819757980464">
													<PolyBezierSegment IsSmoothJoin="True" Points="24.109587,17.81367 25.839185,16.997196 16.521969,15.754796 5.4762738,15.754796 0.96147679,31.512749 0.96147679,20.467054 0.96147679,9.4213589 9.454305,0.5 20.5,0.5 31.545695,0.5 42.282942,14.467202 32.655446,16.33059"/>
												</PathFigure>
											</PathGeometry>
										</Path.Data>
										<Path.RenderTransform>
											<TransformGroup>
												<ScaleTransform ScaleX="-1.4" ScaleY="-1.4"/>
												<SkewTransform AngleX="0" AngleY="0"/>
												<RotateTransform Angle="13.453"/>
												<TranslateTransform X="-3.699" Y="21.638"/>
											</TransformGroup>
										</Path.RenderTransform>
									</Path>
								</Grid>
								<TextBlock Margin="44.5,202.5,45,0" VerticalAlignment="Top" Width="Auto" Height="36.5" FontFamily="Segoe UI" FontSize="18" Foreground="#FFFFFFFF" Text="{TemplateBinding Tag}" TextAlignment="Center" TextWrapping="Wrap" IsHitTestVisible="False" x:Name="textBlock"/>
							</Grid>
						</Grid>
						<Ellipse Stroke="{x:Null}" HorizontalAlignment="Center" x:Name="centerBase" VerticalAlignment="Center" Width="50" Height="50" Margin="103,106" Opacity="0.67"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="EnterHotspot_BeginStoryboard" Storyboard="{StaticResource EnterHotspot}"/>
							</Trigger.EnterActions>
							<Setter Property="Cursor" TargetName="centerShadow1" Value="Hand"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="RoundGlassButton"  BasedOn="{x:Null}" TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="CircleStoryboard">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="_base3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.05000000" Value="1.9"/>
								<SplineDoubleKeyFrame KeySpline="0,1,1,1" KeyTime="00:00:01.000000" Value="3"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="_base3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.05000000" Value="1.9"/>
								<SplineDoubleKeyFrame KeySpline="0,1,1,1" KeyTime="00:00:01.000000" Value="3"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="_base3" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.7"/>
								<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="00:00:01.000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="_base4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0.2"/>
								<SplineDoubleKeyFrame KeySpline="0,1,1,1" KeyTime="00:00:01.000000" Value="3"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="_base4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0.2"/>
								<SplineDoubleKeyFrame KeySpline="0,1,1,1" KeyTime="00:00:01.000000" Value="3"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"  Storyboard.TargetName="_base4" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
								<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,1" KeyTime="00:00:01.000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid Width="180" Height="180">
						<!--Content box-->
                        <!--circle-->
						<Ellipse x:Name="_base4" StrokeThickness="30" RenderTransformOrigin="0.5,0.5" Opacity="0.42" Margin="60" Fill="{x:Null}" Stroke="#FF0A4F57">
							<Ellipse.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
									<SkewTransform AngleX="0" AngleY="0"/>
									<RotateTransform Angle="0"/>
									<TranslateTransform X="0" Y="0"/>
								</TransformGroup>
							</Ellipse.RenderTransform>
						</Ellipse>
						<Ellipse x:Name="_base3" StrokeThickness="10" RenderTransformOrigin="0.5,0.5" Opacity="0.42" Margin="60" Fill="Black" Stroke="#FF0A4F57">
							<Ellipse.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="0.1" ScaleY="0.1"/>
									<SkewTransform AngleX="0" AngleY="0"/>
									<RotateTransform Angle="0"/>
									<TranslateTransform X="0" Y="0"/>
								</TransformGroup>
							</Ellipse.RenderTransform>
						</Ellipse>
						<!-- Background Layer -->
						<Ellipse Fill="{TemplateBinding Background}" Margin="0"/>
                        <!-- Refraction Layer -->
						<Ellipse x:Name="RefractionLayer"  Margin="0">
							<Ellipse.Fill>
								<RadialGradientBrush GradientOrigin="0.496,1.052">
									<RadialGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
											<TranslateTransform X="0.02" Y="0.3"/>
										</TransformGroup>
									</RadialGradientBrush.RelativeTransform>
									<GradientStop Offset="1" Color="#00000000"/>
									<GradientStop Offset="0.208" Color="#FFFFFFFF"/>
								</RadialGradientBrush>
							</Ellipse.Fill>
						</Ellipse>
                        <!-- Reflection Layer -->
						<Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill" Height="191.999" Margin="1.333,0,1.333,-12.499">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleY="0.5"/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Path.RenderTransform>
							<Path.Data>
								<PathGeometry>
									<PathFigure IsClosed="True" StartPoint="98.999,45.499">
										<BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="75.860,47.685"
											Point2="69.111,45.196"
											Point3="50.167,45.196"/>
										<BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="7.469,52.580"
											Point2="1.000,53.252"
											Point3="1.000,44.999"/>
										<BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="9.106,14.370"
											Point2="27.875,0"
											Point3="50,0"/>
										<BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="99.139,39.369"
											Point2="98.999,40.084"
											Point3="98.999,45.499"/>
									</PathFigure>
								</PathGeometry>
							</Path.Data>
							<Path.Fill>
								<RadialGradientBrush GradientOrigin="0.498,0.526">
									<RadialGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform
												CenterX="0.5"
												CenterY="0.5"
												ScaleX="1"
												ScaleY="1.997"/>
											<TranslateTransform X="0" Y="0.5"/>
										</TransformGroup>
									</RadialGradientBrush.RelativeTransform>
									<GradientStop Offset="1" Color="#FFFFFFFF"/>
									<GradientStop Offset="0.85" Color="#92FFFFFF"/>
									<GradientStop Offset="0" Color="#00000000"/>
								</RadialGradientBrush>
							</Path.Fill>
						</Path>
						<TextBlock Margin="45.389,134.167,44.111,0" VerticalAlignment="Top" Width="Auto" Height="36.5" FontFamily="Segoe UI" FontSize="18.667" Foreground="#FF020101" Text="{TemplateBinding Content}" TextAlignment="Center" TextWrapping="Wrap" IsHitTestVisible="False" x:Name="textBlock" RenderTransformOrigin="0.405,-0.218">
							<TextBlock.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</TextBlock.RenderTransform>
						</TextBlock>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="RefractionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.496,1.052">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1.5"
													ScaleY="1.5"/>
												<TranslateTransform X="0.02" Y="0.3"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#00000000"/>
										<GradientStop Offset="0.45" Color="#FFFFFFFF"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter TargetName="ReflectionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.498,0.526">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1"
													ScaleY="1.997"/>
												<TranslateTransform X="0" Y="0.5"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#FFFFFFFF"/>
										<GradientStop Offset="0.85" Color="#BBFFFFFF"/>
										<GradientStop Offset="0" Color="#00000000"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource CircleStoryboard}"/>
							</Trigger.EnterActions>
							<Setter TargetName="RefractionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.496,1.052">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1.5"
													ScaleY="1.5"/>
												<TranslateTransform X="0.02" Y="0.3"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#00000000"/>
										<GradientStop Offset="0.3" Color="#FFFFFFFF"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter TargetName="ReflectionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.498,0.526">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1"
													ScaleY="1.997"/>
												<TranslateTransform X="0" Y="0.5"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#CCFFFFFF"/>
										<GradientStop Offset="0.85" Color="#66FFFFFF"/>
										<GradientStop Offset="0" Color="#00000000"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key ="TransparentButtonStyle" TargetType="{x:Type Button}" >
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="ClickTimeLine">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Border">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Border">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid >
						<Border x:Name="Border" Cursor="Hand" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.RenderTransform>
						</Border>
						<Rectangle x:Name="reflected" OpacityMask ="{StaticResource LinearBgMask}" Margin="0,150,0,-42" RenderTransformOrigin="0.507,1.333">
							<Rectangle.Fill>
								<VisualBrush Visual="{Binding ElementName=Border}">
									<VisualBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform ScaleX="1" ScaleY="-1"/>
											<TranslateTransform Y="0.7"/>
										</TransformGroup>
									</VisualBrush.RelativeTransform>
								</VisualBrush>
							</Rectangle.Fill>
						</Rectangle>
						<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" RenderTransformOrigin="0.5,0.5"  Height="21.25" Width="Auto" FlowDirection="LeftToRight" IsHitTestVisible="False" Margin="50,165,28.5,-36.25" VerticalAlignment="Top" />
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="ButtonBase.Click">
							<BeginStoryboard Storyboard="{StaticResource ClickTimeLine}"/>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key ="SimpleTransparentButtonStyle" TargetType="{x:Type Button}" >
		<Style.Resources>
			<Storyboard x:Key="ClickTimeLine"/>
		</Style.Resources>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="ClickTimeLine">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Border">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Border">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid >
						<Border x:Name="Border" Cursor="Hand" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.RenderTransform>
						</Border>
						<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" RenderTransformOrigin="0.5,0.5"  Height="21.25" Width="Auto" FlowDirection="LeftToRight" IsHitTestVisible="False" Margin="12.001,57.659,10.833,-43.909" VerticalAlignment="Top" Panel.ZIndex="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="ButtonBase.Click">
							<BeginStoryboard Storyboard="{StaticResource ClickTimeLine}"/>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key ="SmallTransparentButtonStyle" TargetType="{x:Type Button}" >
		<Style.Resources>
			<Storyboard x:Key="ClickTimeLine"/>
		</Style.Resources>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="ClickTimeLine">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Border">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Border">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid >
						<Border x:Name="Border" Cursor="Hand" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.RenderTransform>
						</Border>
						<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" RenderTransformOrigin="0.5,0.5"  Height="21.25" Width="40" FlowDirection="LeftToRight" IsHitTestVisible="False" Margin="4.001,39.659,0,-25.909" VerticalAlignment="Top" Panel.ZIndex="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="ButtonBase.Click">
							<BeginStoryboard Storyboard="{StaticResource ClickTimeLine}"/>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


    <!-- Brushes used in Styling of ScrollViewer -->
    <SolidColorBrush x:Key="ScrollBarBackgroundBrush" Color="#FFEFEFEF" />

    <SolidColorBrush x:Key="HoverBorderBrush" Color="Black" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Red" />
    <SolidColorBrush x:Key="SelectedForegroundBrush" Color="Yellow" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="DarkGreen" />
    <SolidColorBrush x:Key="NormalBrush" Color="Transparent" />
    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FFEFEFEF" />
    <SolidColorBrush x:Key="LightColorBrush" Color="#FFEFEFEF" />
    <SolidColorBrush x:Key="GlyphBrush" Color="#FFEFEFEF" />
    <SolidColorBrush x:Key="PressedBrush" Color="#FFEFEFEF" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#FF5A95B8" />
    <!-- border is 0 -->
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#FFEFEFEF" />

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border 
                          Name="Border"
                          Margin="0" 
                          CornerRadius="0" 
                          Background="{StaticResource NormalBrush}"
                          BorderBrush="{StaticResource NormalBorderBrush}"
                          BorderThickness="0">
                        <Path 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{StaticResource GlyphBrush}"
                                Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border 
                          CornerRadius="0" 
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Width="45" >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="17"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="17"/>
            </Grid.RowDefinitions>
            <Border
                  Grid.RowSpan="3"
                  CornerRadius="0" 
                  Background="{StaticResource LinearBgMask}" />
            <RepeatButton 
                    Grid.Row="0"                           
                    Style="{StaticResource ScrollBarLineButton}"
                    Height="17"
                    Command="ScrollBar.LineUpCommand"
                     />
            <Track 
                      Name="PART_Track"
                      Grid.Row="1"
                      IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
                          Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
                          Style="{StaticResource ScrollBarThumb}" 
                          Margin="0,0,0,0"  
                          Background="{StaticResource HorizontalNormalBrush}"
                          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
                          Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton 
                  Grid.Row="3" 
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="17"
                  Command="ScrollBar.LineDownCommand"
                  />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="17"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="17"/>
            </Grid.ColumnDefinitions>
            <Border
                  Grid.ColumnSpan="3"
                  CornerRadius="0" 
                  Background="{StaticResource LinearBgMask}" />
            <RepeatButton 
                  Grid.Column="0"                           
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="17"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track 
                  Name="PART_Track"
                  Grid.Column="1"
                  IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
                          Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
                          Style="{StaticResource ScrollBarThumb}" 
                          Margin="0,0,0,0"  
                          Background="{StaticResource HorizontalNormalBrush}"
                          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
                          Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton 
                  Grid.Column="3" 
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="17"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="15" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="15"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Name="tabItem" Width="125">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="3"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Name="tabItemStyle" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="0" SnapsToDevicePixels="True" Margin="0">
                            <ContentPresenter x:Name="ContentSite"  Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center"   Content="{TemplateBinding Header}">
                            </ContentPresenter>
                        </Border>
                        <Rectangle Grid.Row="1" x:Name="SelectRect" Fill="Transparent">
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="tabItemStyle" Property="Background" Value="#ecf3f9" />
                            <Setter TargetName="SelectRect" Property="Fill" Value="#29458e" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="tabItemStyle" Property="Background" Value="#6381be" />
                                <Setter TargetName="tabItemStyle" Property="BorderBrush" Value="#97acd4" />
                                <Setter TargetName="tabItemStyle" Property="BorderThickness" Value="1,1,1,0" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ChartStyle -->
    <system:Double x:Key="SelectedFontSize">11.0</system:Double>
<Style x:Key="BaseChartStyle" TargetType="metroChart:ChartBase">
    <Setter Property="Margin" Value="0 0 0 0"/>
    <Setter Property="FontSize" Value="{StaticResource SelectedFontSize}" />
</Style>
<Style x:Key="ChartStyleVariableSize" TargetType="metroChart:ChartBase" BasedOn="{StaticResource BaseChartStyle}">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="150"/>
</Style>
    <metroChart:ResourceDictionaryCollection x:Key="MonoChrome">
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush1" Color="#FFA9A9A9" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush1" Color="#FFA1A1A1" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush2" Color="#FF999999" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush3" Color="#FF919191" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush4" Color="#FF898989" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush5" Color="#FF818181" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush6" Color="#FF797979" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush7" Color="#FF717171" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush8" Color="#FF696969" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush9" Color="#FF616161" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush10" Color="#FF595959" />
        </ResourceDictionary>
        <ResourceDictionary>
            <SolidColorBrush x:Key="Brush11" Color="#FF515151" />
        </ResourceDictionary>

    </metroChart:ResourceDictionaryCollection>

    <metroChart:ResourceDictionaryCollection x:Key="Gradients">
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush1" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF00A7D0" Offset="0.0" />
                <GradientStop Color="#FF007C9C" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush2" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF14CAFE" Offset="0.0" />
                <GradientStop Color="#FF019FCC" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush3" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF8FCD3E" Offset="0.0" />
                <GradientStop Color="#FF6B9D28" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush4" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF82B93A" Offset="0.0" />
                <GradientStop Color="#FF5A8028" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush5" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF638A2D" Offset="0.0" />
                <GradientStop Color="#FF425C1F" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush6" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FFE3AAD6" Offset="0.0" />
                <GradientStop Color="#FFD580C1" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush7" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FFB5D8EB" Offset="0.0" />
                <GradientStop Color="#FF6BB1D8" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush8" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FFFF8CBA" Offset="0.0" />
                <GradientStop Color="#FFFF448E" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush9" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FFFF7D7D" Offset="0.0" />
                <GradientStop Color="#FFFF3E3E" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush10" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF6685A2" Offset="0.0" />
                <GradientStop Color="#FF455C72" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush11" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF70BEED" Offset="0.0" />
                <GradientStop Color="#FF1D97E3" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush12" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF61B7EB" Offset="0.0" />
                <GradientStop Color="#FF1C92D9" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="Brush13" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FFD88BC7" Offset="0.0" />
                <GradientStop Color="#FFC44FA9" Offset="1.0" />
            </LinearGradientBrush>
        </ResourceDictionary>
    </metroChart:ResourceDictionaryCollection>
    <!--AppBarButton  colours-->
    <Color x:Key="AppBarItemBackgroundThemeColor" >#00FFFFFF</Color>
    <Color x:Key="AppBarItemDisableForegroundThemeColor" >#66FFFFFF</Color>
    <Color x:Key="AppBarItemForegroundThemeColor">#FFFFFFFF</Color>
    <Color x:Key="AppBarItemPointerOverBackgroundThemeColor">#21FFFFFF</Color>
    <Color x:Key="AppBarItemPointerOverForegroundThemeColor">#FFFFFFFF</Color>
    <Color x:Key="AppBarItemPressedForegroundThemeColor">#FF000000</Color>

    <SolidColorBrush x:Key="AppBarItemBackgroundThemeBrush" Color="{StaticResource AppBarItemBackgroundThemeColor}"/>
    <SolidColorBrush x:Key="AppBarItemDisabledForegroundThemeBrush" Color="{StaticResource AppBarItemDisableForegroundThemeColor}"/>
    <SolidColorBrush x:Key="AppBarItemForegroundThemeBrush" Color="{StaticResource AppBarItemForegroundThemeColor}"/>
    <SolidColorBrush x:Key="AppBarItemPointerOverBackgroundThemeBrush" Color="{StaticResource AppBarItemPointerOverBackgroundThemeColor}"/>
    <SolidColorBrush x:Key="AppBarItemPointerOverForegroundThemeBrush" Color="{StaticResource AppBarItemPointerOverForegroundThemeColor}"/>
    <SolidColorBrush x:Key="AppBarItemPressedForegroundThemeBrush" Color="{StaticResource AppBarItemPressedForegroundThemeColor}"></SolidColorBrush>
    <!--End AppBarButton  colours-->
    <system:String x:Key="TooltipFormat">"{0}:{1}%"</system:String>
    <Style x:Key="BottomAppBarButtonStyle" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISymbol}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Width="100">
                        <StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
                            <Grid Width="40"  Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
                                <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="{StaticResource SegoeUISymbol}" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
                                <TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="{StaticResource SegoeUISymbol}" FontSize="53.333" Margin="-4,-19,0,0"/>
                                <TextBlock Name="Content" HorizontalAlignment="Center" Margin="-1,-1,0,0" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(AutomationProperties.AutomationId)}"/>
                            </Grid>
                            <TextBlock
                                x:Name="TextLabel"
                                Text="{TemplateBinding AutomationProperties.Name}"
                                Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
                                Margin="0,0,2,0"
                                FontSize="12"
                                TextAlignment="Center"
                                Width="88"
                                MaxHeight="32"
                                TextTrimming="WordEllipsis"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundGlyph" Property="Foreground" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
                            <Setter TargetName="Content" Property="TextBlock.Foreground"  Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutlineGlyph" Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                            <Setter TargetName="BackgroundGlyph" Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                            <Setter TargetName="Content"  Property="TextBlock.Foreground" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
                        </Trigger>

                        <Trigger  Property="IsEnabled" Value="False">
                            <Setter TargetName="OutlineGlyph" Property="Foreground" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                            <Setter TargetName="Content"  Property="TextBlock.Foreground" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                            <Setter TargetName="TextLabel" Property="Foreground" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
    </Style>

    <Style x:Key="AppBarButtonTextStyle" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISymbol}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Width="40"  Height="40" Margin="0,0,0,0" HorizontalAlignment="Center">
                        <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="{StaticResource SegoeUISymbol}" FontSize="53.333" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
                        <TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="{StaticResource SegoeUISymbol}" FontSize="53.333" Margin="-4,-19,0,0"/>
                        <TextBlock Name="Content" HorizontalAlignment="Center" Margin="-1,-1,0,0" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=(AutomationProperties.AutomationId)}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundGlyph" Property="Foreground" Value="{StaticResource AppBarItemPointerOverBackgroundThemeBrush}"/>
                            <Setter TargetName="Content" Property="TextBlock.Foreground"  Value="{StaticResource AppBarItemPointerOverForegroundThemeBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OutlineGlyph" Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                            <Setter TargetName="BackgroundGlyph" Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
                            <Setter TargetName="Content"  Property="TextBlock.Foreground" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
                        </Trigger>

                        <Trigger  Property="IsEnabled" Value="False">
                            <Setter TargetName="OutlineGlyph" Property="Foreground" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                            <Setter TargetName="Content"  Property="TextBlock.Foreground" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AppBarButtonImageStyle" TargetType="ButtonBase">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Width="40" Height="40">
                        <Ellipse Name="BackgroundEllipse"  Fill="Transparent" Margin="2" />
                        <Ellipse Name="ContentEllise" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=(adp:AppBarButtonPropertys.NormalBackground)}"  Width="40" Height="40"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentEllise" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=(adp:AppBarButtonPropertys.OverBackground)}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentEllise" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=(adp:AppBarButtonPropertys.PressedBackground)}"/>
                            <Setter TargetName="BackgroundEllipse" Property="Fill" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BottomAppBarButtonImageStyle" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISymbol}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Width="100">
                        <StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
                            <Grid Width="40"  Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
                                <Ellipse Name="ContentEllise" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=(adp:AppBarButtonPropertys.NormalBackground)}"  Width="40" Height="40"/>
                                <Ellipse Name="DisableEllipse" Fill="Black" Opacity="0.3"  Width="40" Height="40" Visibility="Collapsed"/>
                            </Grid>
                            <TextBlock
                                x:Name="TextLabel"
                                Text="{TemplateBinding AutomationProperties.Name}"
                                Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
                                Margin="0,0,2,0"
                                FontSize="12"
                                TextAlignment="Center"
                                Width="88"
                                MaxHeight="32"
                                TextTrimming="WordEllipsis"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentEllise" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=(adp:AppBarButtonPropertys.OverBackground)}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ContentEllise" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=(adp:AppBarButtonPropertys.PressedBackground)}"/>
                        </Trigger>

                        <Trigger  Property="IsEnabled" Value="False">
                            <Setter TargetName="TextLabel" Property="Foreground" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
                            <Setter TargetName="ContentEllise" Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=(adp:AppBarButtonPropertys.PressedBackground)}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="ZoomInAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource ZoominNormal}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource ZoominOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource ZoominPressed}"/>
        </Style.Resources>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="AboutAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource ico_about_n}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource ico_about_o}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource ico_about_p}"/>
        </Style.Resources>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="MoreAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource ico_moreoption_n}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource ico_moreoption_o}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource ico_moreoption_p}"/>
        </Style.Resources>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="ZoomOutAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource ZoomoutNormal}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource ZoomoutOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource ZoomoutPressed}"/>
        </Style.Resources>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="CloseAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonTextStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE10A;"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISymbol}"/>
    </Style>

    <Style x:Key="AddAnnotationAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonTextStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE109;"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISymbol}"/>
    </Style>

    <Style x:Key="OpenLocalAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonTextStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE197;"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISymbol}"/>
    </Style>

    <Style x:Key="MinimizeAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonTextStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE108;"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISymbol}"/>
    </Style>
    <Style x:Key="HomeAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonTextStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE10F;"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISymbol}"/>
    </Style>
    <Style x:Key="AssistantAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource RemoteNormal}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource RemoteOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource RemotePressed}"/>
        </Style.Resources>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="SettingsAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource SettingNormal}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource SettingOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource SettingPressed}"/>
        </Style.Resources>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="BackAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonTextStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE112;"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISymbol}"/>
    </Style>

    <Style x:Key="CloseRightPanelAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource HiddenNormal}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource HiddenOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource HiddenPressed}"/>
        </Style.Resources>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="QuitAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource QuitNormal}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource QuitOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource QuitPressed}"/>
        </Style.Resources>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>
    <Style x:Key="AddNewAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE109;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_AddNew, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="NewTaskAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE109;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Projects_Button_NewTask, Source={StaticResource Resources}}"/>
    </Style>
    <Style x:Key="ImpSVPAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE150;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Projects_Button_ImportSurveyProject, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="DeleteAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE106;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Button_Delete, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="EditAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE104;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Button_Edit, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="AddAppBarButtonStyle" BasedOn="{StaticResource AppBarButtonTextStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE109;"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeUISymbol}"/>
    </Style>

    <Style x:Key="OpenAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE1A5;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Open, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="ShareProjectAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#x0048;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Button_Share, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="ImportAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE150;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Button_Import, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="ReportAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource ico_report_n}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource ico_report_o}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource ico_report_p}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding Projects_Button_Report, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>
    <Style x:Key="CaptureAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource ico_capture_n}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource ico_capture_o}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource ico_capture_p}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Capture, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="CalibrateAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource CalibrateNormal}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource CalibrateOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource CalibrateOverPressed}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Calibrate, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="ShareAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource ShareNormal}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource ShareOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource SharePressed}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding Button_Share, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="FloorPlanAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource ico_floorplan_n}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource ico_floorplan_o}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource ico_floorplan_p}"/>
            <ImageBrush x:Key="Disable" ImageSource="{DynamicResource ico_floorplan_disable}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_FloorPlans, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
        <Setter Property="adp:AppBarButtonPropertys.DisableBackground" Value="{StaticResource Disable}"/>
    </Style>

    <Style x:Key="SaveResultAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE105;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_SaveResult, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="StartAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE102;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Start, Source={StaticResource Resources}}"/>
    </Style>
    <Style x:Key="ResumeAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE102;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Resume, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="ReStartAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource="{DynamicResource RestartNormal}"/>
            <ImageBrush x:Key="Over" ImageSource="{DynamicResource RestartOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource="{DynamicResource RestartPressed}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_ReStart, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="DoneAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE081;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Done, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="ResetAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE117;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Reset, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="CalculateAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE1D0;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Calibrate, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="RefreshAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE117;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Refresh, Source={StaticResource Resources}}"/>
    </Style>
    <Style x:Key="SaveAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE105;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Save, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="CancelAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE10E;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Button_Cancel, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="FindAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE000;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Find, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="StopAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE15B;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Stop, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="PlayAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE102;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Resume, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="ViewResultAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource ="{DynamicResource ico_viewresult_n}"/>
            <ImageBrush x:Key="Over" ImageSource ="{DynamicResource ico_viewresult_o}"/>
            <ImageBrush x:Key="Pressed" ImageSource ="{DynamicResource ico_viewresult_p}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_ViewResult, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="InformationAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource ="{DynamicResource infoNormal}"/>
            <ImageBrush x:Key="Over" ImageSource ="{DynamicResource infoOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource ="{DynamicResource infoPressed}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Information, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="SettingAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource ="{DynamicResource Setting2Normal}"/>
            <ImageBrush x:Key="Over" ImageSource ="{DynamicResource Setting2Over}"/>
            <ImageBrush x:Key="Pressed" ImageSource ="{DynamicResource Setting2Pressed}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Settings, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="UndoAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE10E;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Undo, Source={StaticResource Resources}}"/>
    </Style>

    <Style x:Key="FilterAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE16E;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Filter, Source={StaticResource Resources}}"/>
    </Style>
    <Style x:Key="SelectAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE10C;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Select, Source={StaticResource Resources}}"/>
    </Style>
    <Style x:Key="SelectSurveyTypeAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource ="{DynamicResource SelectNormal}"/>
            <ImageBrush x:Key="Over" ImageSource ="{DynamicResource SelectOver}"/>
            <ImageBrush x:Key="Pressed" ImageSource ="{DynamicResource SelectPressed}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_SelectSurveyType, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="DetachAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonImageStyle}" TargetType="Button">
        <Style.Resources>
            <ImageBrush x:Key="Normal" ImageSource ="{DynamicResource ico_detach_n}"/>
            <ImageBrush x:Key="Over" ImageSource ="{DynamicResource ico_detach_o}"/>
            <ImageBrush x:Key="Pressed" ImageSource ="{DynamicResource ico_detach_p}"/>
        </Style.Resources>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Detach, Source={StaticResource Resources}}"/>
        <Setter Property="adp:AppBarButtonPropertys.NormalBackground" Value="{StaticResource Normal}"/>
        <Setter Property="adp:AppBarButtonPropertys.OverBackground" Value="{StaticResource Over}"/>
        <Setter Property="adp:AppBarButtonPropertys.PressedBackground" Value="{StaticResource Pressed}"/>
    </Style>

    <Style x:Key="AnnotationAppBarButtonStyle" BasedOn="{StaticResource BottomAppBarButtonStyle}" TargetType="Button">
        <Setter Property="AutomationProperties.AutomationId" Value="&#xE16C;"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding AppBarButton_Annotation, Source={StaticResource Resources}}"/>
    </Style>
    <system:Double x:Key="TileItemWidth">250</system:Double>
    <system:Double x:Key="TileItemHeight">120</system:Double>
    <system:Double x:Key="Large">48</system:Double>
    <system:Double x:Key="Big">36</system:Double>
    <system:Double x:Key="Medium">22</system:Double>
    <system:Double x:Key="Small">16</system:Double>
    <system:Double x:Key="Tiny">11</system:Double>

</ResourceDictionary>